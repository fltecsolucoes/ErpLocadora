-- 1. Enumerações (Tipos customizados)
CREATE TYPE "public"."order_status" AS ENUM ('Draft', 'Reserved', 'CheckedOut', 'CheckedIn', 'Cancelled');
CREATE TYPE "public"."payment_status" AS ENUM ('Pending', 'Paid', 'Overdue');
CREATE TYPE "public"."order_type" AS ENUM ('Event', 'Maintenance');

-- 2. RBAC (Usuários e Permissões)
CREATE TABLE "public"."profiles" (
  "id" UUID PRIMARY KEY REFERENCES "auth"."users" ("id") ON DELETE CASCADE,
  "full_name" TEXT,
  "email" TEXT UNIQUE
);
-- Comentário: Habilitar RLS e criar políticas será na Fase 3.

CREATE TABLE "public"."roles" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL UNIQUE
);

CREATE TABLE "public"."permissions" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "slug" TEXT NOT NULL UNIQUE, -- ex: 'manage:products', 'read:clients'
  "description" TEXT
);

CREATE TABLE "public"."role_permissions" (
  "role_id" BIGINT NOT NULL REFERENCES "public"."roles" ("id") ON DELETE CASCADE,
  "permission_id" BIGINT NOT NULL REFERENCES "public"."permissions" ("id") ON DELETE CASCADE,
  PRIMARY KEY ("role_id", "permission_id")
);

CREATE TABLE "public"."user_roles" (
  "profile_id" UUID NOT NULL REFERENCES "public"."profiles" ("id") ON DELETE CASCADE,
  "role_id" BIGINT NOT NULL REFERENCES "public"."roles" ("id") ON DELETE CASCADE,
  PRIMARY KEY ("profile_id", "role_id")
);

-- 3. CRM e Inventário
CREATE TABLE "public"."clients" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "name" TEXT NOT NULL,
  "document" TEXT UNIQUE, -- CPF ou CNPJ
  "email" TEXT,
  "phone" TEXT,
  "created_at" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "public"."categories" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "name" TEXT NOT NULL
);

CREATE TABLE "public"."products" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "name" TEXT NOT NULL,
  "description" TEXT,
  "category_id" UUID REFERENCES "public"."categories" ("id"),
  "rent_value" NUMERIC(10, 2) DEFAULT 0.00, -- Valor em R$ (Real Brasileiro)
  "total_quantity" INT NOT NULL DEFAULT 0, -- Estoque físico total
  "dimensions" TEXT, -- ex: "1.2m x 0.5m x 0.3m" (Padrão Metro)
  "is_kit" BOOLEAN DEFAULT FALSE,
  "created_at" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "public"."kit_items" (
  "kit_product_id" UUID NOT NULL REFERENCES "public"."products" ("id") ON DELETE CASCADE,
  "child_product_id" UUID NOT NULL REFERENCES "public"."products" ("id") ON DELETE CASCADE,
  "quantity" INT NOT NULL DEFAULT 1,
  PRIMARY KEY ("kit_product_id", "child_product_id")
);

-- 4. Operações (Orçamentos e OS)
CREATE TABLE "public"."quotes" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "client_id" UUID NOT NULL REFERENCES "public"."clients" ("id"),
  "status" TEXT DEFAULT 'Draft', -- 'Draft', 'Sent', 'Converted'
  "created_at" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "public"."quote_items" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "quote_id" UUID NOT NULL REFERENCES "public"."quotes" ("id") ON DELETE CASCADE,
  "product_id" UUID NOT NULL REFERENCES "public"."products" ("id"),
  "quantity" INT NOT NULL DEFAULT 1,
  "unit_price" NUMERIC(10, 2), -- Preço pode ser negociado (R$)
  "start_date" TIMESTAMPTZ NOT NULL,
  "end_date" TIMESTAMPTZ NOT NULL
);

CREATE TABLE "public"."orders" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "quote_id" UUID UNIQUE REFERENCES "public"."quotes" ("id"), -- De onde veio
  "client_id" UUID NOT NULL REFERENCES "public"."clients" ("id"),
  "status" "public"."order_status" DEFAULT 'Draft',
  "type" "public"."order_type" DEFAULT 'Event',
  "created_at" TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE "public"."order_items" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" UUID NOT NULL REFERENCES "public"."orders" ("id") ON DELETE CASCADE,
  "product_id" UUID NOT NULL REFERENCES "public"."products" ("id"),
  "quantity" INT NOT NULL DEFAULT 1,
  "status" TEXT, -- Status individual do item (ex: 'CheckedOut', 'Returned')
  "start_date" TIMESTAMPTZ NOT NULL,
  "end_date" TIMESTAMPTZ NOT NULL
);

CREATE TABLE "public"."order_technicians" (
  "order_id" UUID NOT NULL REFERENCES "public"."orders" ("id") ON DELETE CASCADE,
  "profile_id" UUID NOT NULL REFERENCES "public"."profiles" ("id") ON DELETE CASCADE,
  PRIMARY KEY ("order_id", "profile_id")
);